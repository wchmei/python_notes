0.是哪个特征让我们一眼就能认出这货是魔法方法？
答：魔法方法总是被双下划线包围，例如__init__

1.类实例化对象调用的第一个方法是什么？
答：__new__是在一个对象实例化的时候所调用的第一个方法。它跟其它魔法方法不同，它的第一个参数不是self
这个类(cls)，而其它的参数会直接传递个__init__的方法。

2什么时候我们需要在类中明确写出__init__方法？
答：当我们的实例对象需要有明确的初始化步骤的时候，你可以在__init__方法中部署初始化的代码。
eg.
#我们定一个矩形类，需要长和宽两个参数，拥有计算周长和面积两个方法。
#我们需要对象在初始化的时候拥有"长"和"宽"两个参数，因此我们需要重写__init__方法
#因为我们说过，__init__方法是类在实例化对象的时候首先会调用的一个方法。
class Rectangle:
	def __init__(self,x,y):
		self.x = x
		self.y = y
	def getPeri(self):
		return (self.x +self.y)*2:
	def getArea(self):
		return self.x*self.y

rect = Rectangle(3,4)
rect.getPeri()
rect.getArea()

3 在编程中需要注意到__init__方法返回值一定是None,

4 请问__new__方法是负责什么任务？
答：__new__方法主要是任务时返回一个实例对象,通常是参数cls这个类的实例化对象，当然你也可以返回其他对象。

5.__del__魔法方法什么时候会被自动调用？
答：如果说__init__和__new__方法是对象的构造器的话，那么Python也提供了一个析构器，叫做__del__方法。
当对象要被销毁的时候，这个方法就会被调用。
但一定要注意的是，并非del x 就相当于自动调用x.__del__(),__del__方法是当垃圾回收机制回收这个对象的时候调用的。
